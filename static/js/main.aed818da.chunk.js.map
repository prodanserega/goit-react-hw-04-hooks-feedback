{"version":3,"sources":["Components/FeedBackOptions/FeedbackOption.js","Components/Section/Section.js","Components/Notification/Notification.js","Components/Statistics/Statistics.js","date/Feedback.js","Components/App.js","index.js","Components/Statistics/Statistics.module.css","Components/App.module.css","Components/FeedBackOptions/FeedbackOption.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","feedback","className","s","button","type","name","onClick","FeedbackButton","propTypes","PropTypes","arrayOf","string","isRequired","func","Section","title","children","Notification","message","prototype","Statistics","good","neutral","bad","total","totalPositive","statisticsItem","statisticsList","Feedback_Option","App","useState","setGood","setNeutral","setBad","countTotalFeedback","PositiveInterest","Math","round","countPositive","FeedbackOption","event","target","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAkBMA,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,GAAD,OAfE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUH,EAAsB,EAAtBA,gBAClC,OACE,wBACEI,UAAWC,IAAEC,OACbC,KAAK,SACLC,KAAML,EAENM,QAAST,EALX,SAOGG,GAHIA,GAUPO,CAAe,CAAEP,SAAUD,EAAQF,wBAIvCF,EAAgBa,UAAY,CAC1BZ,QAASa,IAAUC,QAAQD,IAAUE,QAAQC,WAC7Cf,gBAAiBY,IAAUI,KAAKD,YAGnBjB,QCbAmB,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCLDC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAaE,UAAY,CACvBD,QAAST,IAAUE,OAAOC,YAGbK,Q,gBCuBAG,EAzBI,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC/C,OACE,qCACGD,EAAQ,GACP,qBAAIvB,UAAWC,IAAEwB,eAAjB,UACE,qBAAIzB,UAAWC,IAAEyB,eAAjB,kBAAuCN,KACvC,qBAAIpB,UAAWC,IAAEyB,eAAjB,qBAA0CL,KAC1C,qBAAIrB,UAAWC,IAAEyB,eAAjB,iBAAsCJ,KACtC,qBAAItB,UAAWC,IAAEyB,eAAjB,mBAAwCH,KACxC,qBAAIvB,UAAWC,IAAEyB,eAAjB,2BAAgDF,QAGzC,IAAVD,GAAe,cAAC,EAAD,CAAcN,QAAQ,0BClB/BU,EAAkB,CAAC,OAAQ,UAAW,O,gBCWpC,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAoBMC,EAAqB,WACzB,OAAOb,EAAOC,EAAUC,GAQpBC,EAAQU,IACRC,EANgB,WACpB,IAAMX,EAAQU,IACd,OAAOV,EAAQY,KAAKC,MAAOhB,EAAOG,EAAS,KAAO,EAI3Bc,GAEzB,OACE,sBAAKrC,UAAWC,IAAE2B,IAAlB,UACE,cAAC,EAAD,CAAS5B,UAAWC,IAAEa,MAAOA,MAAM,wBAAnC,SACE,cAACwB,EAAD,CACE3C,QAASgC,EACT/B,gBAnCe,SAAC2C,GAGtB,OAFiBA,EAAMC,OAAfpC,MAGN,IAAK,OACH0B,GAAQ,SAACW,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHV,GAAW,SAACU,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHT,GAAO,SAACS,GAAD,OAAeA,EAAY,KAClC,MACF,QACE,aAwBDlB,EAAQ,EACP,cAAC,EAAD,CAASvB,UAAWC,IAAEa,MAAOA,MAAM,cAAnC,SACE,cAAC,EAAD,CACEM,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,cAAeU,MAInB,cAAC,EAAD,CAAcjB,QAAS,kCCpD/ByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,U,kBChB1BC,EAAOC,QAAU,CAAC,eAAiB,qC,kBCAnCD,EAAOC,QAAU,CAAC,EAAI,eAAe,MAAQ,mBAAmB,IAAM,mB,kBCAtED,EAAOC,QAAU,CAAC,OAAS,kC","file":"static/js/main.aed818da.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nimport s from \"./FeedbackOption.module.css\";\r\n\r\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\r\n  return (\r\n    <button\r\n      className={s.button}\r\n      type=\"button\"\r\n      name={feedback}\r\n      key={feedback}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map((option) =>\r\n    FeedbackButton({ feedback: option, onLeaveFeedback })\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\n//import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.prototype = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, totalPositive }) => {\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <ul className={s.statisticsItem}>\r\n          <li className={s.statisticsList}>Good:{good}</li>\r\n          <li className={s.statisticsList}>Neutral:{neutral}</li>\r\n          <li className={s.statisticsList}>Bad:{bad}</li>\r\n          <li className={s.statisticsList}>Total:{total}</li>\r\n          <li className={s.statisticsList}>totalPositive:{totalPositive}</li>\r\n        </ul>\r\n      )}\r\n      {total === 0 && <Notification message=\"No Feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  totalPositive: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","export const Feedback_Option = [\"good\", \"neutral\", \"bad\"];\r\n","import React, { useState } from \"react\";\r\n\r\nimport FeedbackOptions from \"./FeedBackOptions/FeedbackOption\";\r\nimport Section from \"./Section/Section\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport Notification from \"./Notification/Notification\";\r\n\r\nimport { Feedback_Option } from \"../date/Feedback\";\r\n\r\nimport s from \"./App.module.css\";\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const handleFeedback = (event) => {\r\n    const { name } = event.target;\r\n\r\n    switch (name) {\r\n      case \"good\":\r\n        setGood((prevState) => prevState + 1);\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral((prevState) => prevState + 1);\r\n        break;\r\n      case \"bad\":\r\n        setBad((prevState) => prevState + 1);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositive = () => {\r\n    const total = countTotalFeedback();\r\n    return total ? Math.round((good / total) * 100) : 0;\r\n  };\r\n\r\n  const total = countTotalFeedback();\r\n  const PositiveInterest = countPositive();\r\n\r\n  return (\r\n    <div className={s.App}>\r\n      <Section className={s.title} title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={Feedback_Option}\r\n          onLeaveFeedback={handleFeedback}\r\n        />\r\n      </Section>\r\n      {total > 0 ? (\r\n        <Section className={s.title} title=\"Statistics:\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            totalPositive={PositiveInterest}\r\n          />\r\n        </Section>\r\n      ) : (\r\n        <Notification message={\"No feedback has been given\"} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__1Wbib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"s\":\"App_s__36GZ7\",\"title\":\"App_title__2xo7l\",\"App\":\"App_App__3iyXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOption_button__RPW0C\"};"],"sourceRoot":""}